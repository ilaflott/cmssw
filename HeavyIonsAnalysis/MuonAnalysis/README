(3/18/16, 3:00 pm):

renamed plugin (ggHiNtuplizerMuTree -> muonTree), changed runForest scripts to explicitly include default values of inputTag fields, changed runForest script output root file title, changed all maxEvent fields to 10 for brevity of cmsRun test, added muonTree-specific runtest file in HeavyIonsAnalysis/JetAnalysis/test. Initial compilation+cmsRun tests on AOD seem normal (pp DATA, pp MC, PbPb Data, not PbPb MB nor PbPb MIX {note to self, MB and MIX are MC}).

thought: change genParticles field to genMuons field? I.e., instead of doing all gen particles, only do muons + their mothers/daughters? Putting a pause on this thought for now, but i imagine this could be useful for later id of types of muons (dimuon, single muon, etc.). 

Contents of MuonAnalysis folder is currently:

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

[ilaflott@hexcms MuonAnalysis]$ ls *
README

interface:
GenParticleParentageMuTree.h  muonTree.h

plugins:
BuildFile.xml  GenParticleParentageMuTree.cc  muonTree.cc

python:
__init__.py  __init__.pyc  muonTree_cfi.py  muonTree_cfi.pyc


(3/17/16, 7:00 pm):

More muon + track info added, reorganization done too. cleanUp routine part of class. Compilation + cmsRun tests all run as expected.

(3/17/16, 4:10 pm):

Quality, type, selection flags are declared and added to headers. fillMuons receives pointer to best-fit PV of the event for isTightMuon() calculation. Compilation + cmsRun tests on pp AOD Data perform as expected with no errors. Proceeding onto adding other track information + more tests.

(3/16/16, 4:30 pm):

Added quality, type, and selection flags. fill kinematic variables before skipping due to selection. added isSelected flag. variables cleared but branch declarations absent for the time being. header must be edited. unsure if pointer of reco::Vertex or math::XYZPoint being passed to fillMuons correctly. More Coding to follow, then Compiling + Debugging

(3/16/16, 2:10 pm):

ggHiNtuplizerMuTree stripped of electron, photon, pfIsoCalculatorMuTree, src folder, and BuildFile in HeavyIonsAnalysis/MuonAnalysis. gen particle isolation + fill routines in Ntuplizer, as well as parentage code kept for potential future applicaiton for now.

compilation works and cmsRun tests on pp AOD show similar performance + no fatal errors. Proceeding to add in additional muon information.

Contents of MuonAnalysis folder is currently:

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

[ilaflott@hexcms MuonAnalysis]$ ls *
README

interface:
GenParticleParentageMuTree.h  ggHiNtuplizerMuTree.h

plugins:
BuildFile.xml  GenParticleParentageMuTree.cc  ggHiNtuplizerMuTree.cc

python:
ggHiNtuplizerMuTree_cfi.py  ggHiNtuplizerMuTree_cfi.pyc  __init__.py  __init__.pyc

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

(3/15/16, 2:30 pm):

Basic ggHiNtuplizerMuTree compiles+runs as plug in w/ forest on pp AOD. 

Proceeding to stripping extraneous info + customizing for dedicated muon tree.

BuildFile.xml and plugins/BuildFile.xml both probably contain superfluous library dependencies, will fix at future time.

Contents of MuonAnalysis folder is currently:

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

[ilaflott@hexcms MuonAnalysis]$ ls *
BuildFile.xml  README

interface:
GenParticleParentageMuTree.h  ggHiNtuplizerMuTree.h

plugins:
BuildFile.xml  GenParticleParentageMuTree.cc  ggHiNtuplizerMuTree.cc

python:
__init__.py  __init__.pyc  ggHiNtuplizerMuTree_cfi.py  ggHiNtuplizerMuTree_cfi.pyc

src:
pfIsoCalculatorMuTree.cc  pfIsoCalculatorMuTree.h  pfIsoCalculatorMuTree.h~

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
